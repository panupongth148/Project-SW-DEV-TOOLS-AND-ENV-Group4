pipeline {
    agent any

    stages {
        stage('Pull code') {
            steps {
                git branch: 'main', url: 'https://github.com/panupongth148/Project-SW-DEV-TOOLS-AND-ENV-Group4'
            }
        }
        stage('Download dependency') {
            steps {
                sh 'cd backend && npm install'
            }
        }
        stage('Run unit test') {
            steps {
                   echo 'cd backend && npm run test'
            }
        }
        stage('Run component test') {
            steps {
                sh 'cd backend && npm run test:compo'
            }
        }
        stage("Deploy") {
            steps {
                withCredentials([string(credentialsId: 'T04_host', variable: 'host'), 
                string(credentialsId: 'T04_USERNAME', variable: 'username'), 
                string(credentialsId: 'T04_BACKEND_PASS', variable: 'password')]) 
                {
                    script{
                        def remote = [:]
                        remote.name = 'T04'
                        remote.host = host
                        remote.user = username
                        remote.password = password
                        remote.allowAnyHosts = true
//                          try {
//                              sshCommand remote: remote, command: "git clone -b main https://github.com/panupongth148/Project-SW-DEV-TOOLS-AND-ENV-Group4.git"

//                              def tag = "BACKEND_TAG=3.0.${BUILD_NUMBER}\nFRONTEND_TAG=2.0.${BUILD_NUMBER}"
//                              writeFile(file: '.env', text: tag)
//                              sshPut remote: remote, from: '.env', into: '.'

//                              sshCommand remote: remote, command: "docker-compose -f Project-SW-DEV-TOOLS-AND-ENV-Group4/docker-compose-deploy.yml down"
//                              sshCommand remote: remote, command: "docker-compose -f Project-SW-DEV-TOOLS-AND-ENV-Group4/docker-compose-build.yml build --no-cache backend"
//                              sshCommand remote: remote, command: "docker-compose -f Project-SW-DEV-TOOLS-AND-ENV-Group4/docker-compose-deploy.yml up -d backend"
//                              }catch (err) {
//                                  echo "Error: ${err.message}"
//                                  echo "Error: ${err.stack}"
//                              } finally {
//                                  sshRemove remote: remote, path: "Project-SW-DEV-TOOLS-AND-ENV-Group4"
//                                  sshRemove remote: remote, path: ".env"
//                          }
                        sshRemove remote: remote, path: "Project-SW-DEV-TOOLS-AND-ENV-Group4"

                    }
                }
            }
            }
        stage('E2E Test') {
            steps {
                dir('backend') {
                    echo "npm run test:e2e"
                }
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: './backend', reportFiles: 'e2e.html', reportName: 'E2E Test Report', reportTitles: 'E2E Test Report'])
            }
}
    }
}
